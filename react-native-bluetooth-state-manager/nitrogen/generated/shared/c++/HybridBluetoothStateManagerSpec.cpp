///
/// HybridBluetoothStateManagerSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridBluetoothStateManagerSpec.hpp"

namespace margelo::nitro::bluetoothstatemanager {

  void HybridBluetoothStateManagerSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("getState", &HybridBluetoothStateManagerSpec::getState);
      prototype.registerHybridMethod("getStateSync", &HybridBluetoothStateManagerSpec::getStateSync);
      prototype.registerHybridMethod("addListener", &HybridBluetoothStateManagerSpec::addListener);
      prototype.registerHybridMethod("removeListener", &HybridBluetoothStateManagerSpec::removeListener);
      prototype.registerHybridMethod("openSettings", &HybridBluetoothStateManagerSpec::openSettings);
      prototype.registerHybridMethod("requestToEnable", &HybridBluetoothStateManagerSpec::requestToEnable);
      prototype.registerHybridMethod("requestToDisable", &HybridBluetoothStateManagerSpec::requestToDisable);
    });
  }

} // namespace margelo::nitro::bluetoothstatemanager
